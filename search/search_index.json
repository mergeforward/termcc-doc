{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"安装 使用pip pip install termcc 或者， 使用poetry poetry add termcc 运行 termcc :green:hello:blue:world 在Python中运行 python运行 彩色日志 彩色日志","text_tokens":["green",":","python","运行","world","，","中","日志","termcc","或者","使用","hello","add","安装","在","pip","blue","poetry"," ","install","彩色"],"title":"简介","title_tokens":["简介"]},{"location":"#_1","text":"使用pip pip install termcc 或者， 使用poetry poetry add termcc","text_tokens":["，","pip"," ","termcc","install","或者","poetry","使用","add"],"title":"安装","title_tokens":["安装"]},{"location":"#_2","text":"termcc :green:hello:blue:world","text_tokens":["green","world"," ","termcc","blue",":","hello"],"title":"运行","title_tokens":["运行"]},{"location":"#python","text":"python运行","text_tokens":["运行","python"],"title":"在Python中运行","title_tokens":["中","在","运行","python"]},{"location":"#_3","text":"彩色日志","text_tokens":["日志","彩色"],"title":"彩色日志","title_tokens":["日志","彩色"]},{"location":"cc/","text":"from termcc.cc import cc , dd , clean from termcc.core import ccc , yellow , reset , blue_ , rblue_ if __name__ == '__main__' : print ( cc ( \":reset:\" )) print ( cc ( 'man wants to drink :beer:, :yellow: and now... :reset:' )) print ( cc ( 'japan art :water_wave:' )) print ( cc ( 'taiji is about :blue: :yin_yang: :red: :yin_yang: :reset:' )) print ( cc ( \":alarm_clock: it's time to go\" )) print ( '.' * 80 ) print ( dd ( cc ( 'taiji is about :blue: :yin_yang: :red: :yin_yang: :reset:' ))) print ( clean ( dd ( cc ( 'taiji is about :blue: :yin_yang: :red: :yin_yang: :reset:' )))) print ( dd ( \"⏰ it's time to go\" )) print ( '#' * 80 ) print ( cc ( 'man wants to drink <beer>, <yellow> and now... <reset>' , delimiters = ( '<' , '>' ))) print ( cc ( 'japan art <water_wave>' , delimiters = ( '<' , '>' ))) print ( cc ( 'taiji is about <blue> <yin_yang> <red> <yin_yang> <reset>' , delimiters = ( '<' , '>' ))) print ( cc ( \"<alarm_clock> it's time to go\" , delimiters = ( '<' , '>' ))) print ( '.' * 80 ) print ( dd ( cc ( 'taiji is about <blue> <yin_yang> <red> <yin_yang> <reset>' , delimiters = ( '<' , '>' )), delimiters = ( '<' , '>' ))) print ( clean ( dd ( cc ( 'taiji is about <blue> <yin_yang> <red> <yin_yang> <reset>' , delimiters = ( '<' , '>' )), delimiters = ( '<' , '>' )), delimiters = ( '<' , '>' ))) print ( '#' * 80 ) print ( cc ( 'man wants to drink ###beer, ###yellow and now... ###reset' , delimiters = ( '###' , '' ))) print ( dd ( cc ( 'man wants to drink ###beer, ###yellow and now... ###reset' , delimiters = ( '###' , '' )), delimiters = ( '###' , '' ))) # print(cc('japan art <water_wave>', delimiters=('<','>'))) print ( yellow () + blue_ () + \"hello\" + rblue_ () + \"world\" ) 运行效果类似","text_tokens":["效果","about","alarm","and","clean","taiji",":","ccc","=","运行","*","now","import","world","cc","core","termcc","80","man","...","drink","_","art","name",".","from","hello","to","类似","go","print",")","water","<","\"","dd","blue","main","yang","red","⏰",">","it","rblue","if","+","(","#","__","yin","clock","yellow","time","is","japan"," ","reset","###","'","delimiters","beer","s","wave","wants",","],"title":"打印","title_tokens":["打印"]},{"location":"log/","text":"from termcc.helper.logger import sample_default as setup_logger from logbook import Logger from termcc.cc import cc if __name__ == '__main__' : setup_logger () log = Logger ( 'termcc' ) log . info ( cc ( ':green:hello' )) log . info ( cc ( ':blue:world' )","text_tokens":["green",":","=","import","world","as","cc","termcc","logger","_","name",".","default","from","hello",")","main","blue","info","log","if","(","__","setup","sample"," ","'","logbook","helper"],"title":"日志","title_tokens":["日志"]}]}